---
import { getSortedPosts } from '../utils/content-utils'

import { getPostUrlBySlug } from '../utils/url-utils'

const { tags, tag } = Astro.props

let posts = await getSortedPosts()

if (Array.isArray(tags) && tags.length > 0) {
  posts = posts.filter(
    post =>
      Array.isArray(post.data.tags) &&
      post.data.tags.some(tag => tags.includes(tag)),
  )
}

const groups: { year: number; posts: typeof posts }[] = (() => {
  //如果有使用tag過濾文章
  if(tag){
  posts = posts.filter(post => post.data.tags.includes(tag))
}
  const groupedPosts = posts.reduce(
    (grouped: { [year: number]: typeof posts }, post) => {
      const year = post.data.pubDate.getFullYear()
      if (!grouped[year]) {
        grouped[year] = []
      }
      grouped[year].push(post)
      return grouped
    },
    {},
  )

  // convert the object to an array
  const groupedPostsArray = Object.keys(groupedPosts).map(key => ({
    year: Number.parseInt(key),
    posts: groupedPosts[Number.parseInt(key)],
  }))

  // sort years by latest first
  groupedPostsArray.sort((a, b) => b.year - a.year)
  return groupedPostsArray
})()

function formatDate(date: Date) {
  const month = (date.getMonth() + 1).toString().padStart(2, '0')
  const day = date.getDate().toString().padStart(2, '0')
  return `${month}-${day}`
}

function formatTag(tag: string[]) {
  return tag.map(t => `#${t}`).join(' ')
}

---

<div class="my-4 bg-slate-100 dark:bg-slate-900 rounded-xl md:px-8 md:py-6 overflow-hidden">
    {groups.map(group => (
            <div>
               <div class="flex flex-row w-full items-center h-[3.75rem]">
                    <div class="w-[15%] md:w-[10%]  text-lg md:text-2xl font-bold text-right">{group.year}</div>
                    <div class="w-[15%] md:w-[10%]">
                        <div class="h-3 w-3 bg-none rounded-full outline outline-[var(--primary)] mx-auto -outline-offset-[2px] z-50 outline-3"></div>
                    </div>
                    <div class="w-[70%] md:w-[80%]  text-left text-base">{group.posts.length} posts</div>
                </div>
                {group.posts.map(post => (
                    <a href={getPostUrlBySlug(post.id)}
                       aria-label={post.data.title}
                       class="group btn-plain !block h-10 w-full rounded-lg "
                    >
                        <div class="flex justify-start items-center h-full">
                            <!-- date -->
                            <div class="w-[15%] md:w-[10%] text-sm text-right text-50">
                                {formatDate(post.data.pubDate)}
                            </div>
                            <!-- dot and line -->
                           <div class="w-[15%] md:w-[10%] relative dash-line h-full flex items-center">
                                <div class="transition-all mx-auto w-1 h-1 rounded group-hover:h-6
                               group-hover:bg-[var(--primary)]
                                bg-gray-300 dark:bg-gray-700
                                "></div>
                            </div>
                            <!-- post title -->
                            <div class="w-[70%] md:max-w-[65%] text-lg text-left font-bold
                               pr-8 whitespace-nowrap overflow-ellipsis overflow-hidden"
                            >
                                    {post.data.title}
                            </div>
                            <!-- tag list -->
                            <div class="hidden md:block md:w-[15%] text-left text-sm
                            whitespace-nowrap text-ellipsis overflow-hidden
                            text-30"
                            >{formatTag(post.data.tags)}</div>
                        </div>
                    </a>
                ))}
            </div>
        ))
    }
</div>